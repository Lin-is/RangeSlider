!function(e){function t(t){for(var l,r,d=t[0],a=t[1],o=t[2],u=0,h=[];u<d.length;u++)r=d[u],Object.prototype.hasOwnProperty.call(n,r)&&n[r]&&h.push(n[r][0]),n[r]=0;for(l in a)Object.prototype.hasOwnProperty.call(a,l)&&(e[l]=a[l]);for(c&&c(t);h.length;)h.shift()();return s.push.apply(s,o||[]),i()}function i(){for(var e,t=0;t<s.length;t++){for(var i=s[t],l=!0,d=1;d<i.length;d++){var a=i[d];0!==n[a]&&(l=!1)}l&&(s.splice(t--,1),e=r(r.s=i[0]))}return e}var l={},n={0:0},s=[];function r(t){if(l[t])return l[t].exports;var i=l[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=l,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)r.d(i,l,function(t){return e[t]}.bind(null,l));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/";var d=window.webpackJsonp=window.webpackJsonp||[],a=d.push.bind(d);d.push=t,d=d.slice();for(var o=0;o<d.length;o++)t(d[o]);var c=a;s.push([0,1]),i()}([function(e,t,i){"use strict";i.r(t),function(e){i.d(t,"Observer",(function(){return n})),i.d(t,"Car",(function(){return l}));i(2);class l{go(e){return console.log(e),e}}class n{constructor(e){this.notify=function(t){e(t)}}}class s{constructor(e){this.sliderInfo={idNum:e.idNum,min:e.minScaleValue,max:e.maxScaleValue,step:e.step,handleNumber:e.handleNumber}}render(e,t=document.body){this.mainContainer=this.createElement("div","slider__mainContainer",e),t.append(this.mainContainer);let i=0,l=this.createElement("div","slider__controlElements",e),n=this.createElement("input","slider__valueCheckbox",e);n.setAttribute("type","checkbox"),n.setAttribute("checked","true");let s=this.createElement("label","slider__valueCheckboxLabel",e);s.setAttribute("for",""+n.id),s.innerHTML="Показать значение над ползунком";let r=this.createElement("div","slider__minMaxInputsContainer",e),d=this.createElement("div","slider__minInputLabel",e);d.innerHTML="Min:";let a=this.createElement("input","slider__minInput",e);a.setAttribute("type","text"),a.setAttribute("placeholder",""+this.sliderInfo.min),d.setAttribute("for",""+a.id);let o=this.createElement("div","slider__maxInputLabel",e);o.innerHTML="Max:";let c=this.createElement("input","slider__maxInput",e);c.setAttribute("type","text"),c.setAttribute("placeholder",""+this.sliderInfo.max),o.setAttribute("for",""+c.id);let u=this.createElement("div","slider__stepInputLabel",e);u.innerHTML="Шаг:";let h=this.createElement("input","slider__stepInput",e);h.setAttribute("type","text"),h.setAttribute("placeholder",""+this.sliderInfo.step),u.setAttribute("for",""+h.id);let m=this.createElement("div","slider__viewRadioContainer",e),p=this.createElement("label","slider__viewRadioCommonLabel",e);p.innerHTML="Вид слайдера:";let f=this.createElement("input","slider__viewRadio","horizontal-"+e);f.setAttribute("type","radio"),f.setAttribute("name","slider__viewRadio"+e),f.setAttribute("value","horizontal"),f.setAttribute("checked","true");let g=this.createElement("label","slider__viewRadioLabel",e);g.setAttribute("for",""+f.id),g.innerHTML="Горизонтальный";let v=this.createElement("input","slider__viewRadio","vertical-"+e);v.setAttribute("type","radio"),v.setAttribute("name","slider__viewRadio"+e),v.setAttribute("value","vertical");let b=this.createElement("label","slider__viewRadioLabel",e);b.setAttribute("for",""+v.id),b.innerHTML="Вертикальный";let _=this.createElement("button","slider__addHandleButton",e);_.setAttribute("type","button"),_.innerHTML="+";let E=this.createElement("button","slider__deleteAllHandlesButton",e);E.setAttribute("type","button"),E.innerHTML="- all",E.classList.add("hidden");let C=this.createElement("div","slider__handleControlContainer",e);this.mainContainer.append(l),l.append(n),l.append(s),l.append(r),r.append(d),r.append(a),r.append(o),r.append(c),l.append(u),l.append(h),l.append(m),m.append(p),m.append(f),m.append(g),m.append(v),m.append(b),l.append(_),l.append(E),l.append(C);let S=this.createElement("div","slider__container",e),y=this.createElement("div","slider__scale",e);this.mainContainer.append(S),S.append(y);let L=this;for(;i<this.sliderInfo.handleNumber;)this.addToggle(y,C),i++;n.addEventListener("change",(function(){n.checked?L.showToggleLables(e,!0):L.showToggleLables(e,!1)})),_.addEventListener("click",(function(e){e.preventDefault(),L.addToggle(y,C),E.classList.remove("hidden")})),E.addEventListener("click",(function(){L.deleteAllToggles(e),this.classList.add("hidden")})),v.addEventListener("change",(function(){this.checked&&L.rotateScaleVertical(S.id)})),f.addEventListener("change",(function(){f.checked&&L.rotateScaleHorisontal(S.id)}))}createElement(e,t,i){if(!e||!t)return;let l=document.createElement(e);return l.className=t,i&&(l.id=t+"-"+i),l}addToggle(t,i){let l=t.childElementCount+1,n=this.sliderInfo.idNum+"-"+l,s=this.createElement("div","slider__toggle",n),r=this.createElement("div","slider__toggleLabel",n),d=this;t.append(s),s.append(r);let a=this.createElement("div","slider__toggleControl",n);i.append(a);let o=this.createElement("lable","slider__toggleValueFieldLabel",n);o.innerHTML=l+": ";let c=this.createElement("input","slider__toggleValueField",n);if(c.setAttribute("type","text"),o.setAttribute("for",""+c.id),a.append(o),a.append(c),t.classList.contains("vertical")&&(s.classList.add("vertical"),r.classList.add("vertical")),+l>1){t.firstElementChild.firstElementChild.classList.contains("hidden")&&s.firstElementChild.classList.add("hidden");let i=this.createElement("button","slider__deleteToggleButton",n);i.setAttribute("type","button"),i.innerHTML="-",a.append(i),i.addEventListener("click",(function(){let t=e(this).attr("id"),[,i,l]=t.split("-");d.deleteToggle(i,+l)}))}c.addEventListener("change",(function(){d.chandeTogglePosition(this.value,t,s)})),this.addToggleDragAndDrop(t,s)}addToggleDragAndDrop(e,t){let i,l=t.parentElement.parentElement.previousElementSibling.lastElementChild.lastElementChild.firstChild.nextSibling,n=t.firstElementChild,s=0,r=this.sliderInfo.max-this.sliderInfo.min,d=this.sliderInfo.min,a=this.sliderInfo.step,o=1;t.addEventListener("mousedown",(function(c){c.preventDefault();let u=t.classList.contains("vertical"),h=r/a;function m(a){let c,h;u?(h=e.offsetHeight-t.offsetHeight,c=a.clientY-i-e.getBoundingClientRect().top):(c=a.clientX-i-e.getBoundingClientRect().left,h=e.getBoundingClientRect().width-t.getBoundingClientRect().width);let m=t.nextElementSibling,p=t.previousElementSibling;p&&(s=p.getBoundingClientRect().right-e.getBoundingClientRect().left,u&&(s=p.getBoundingClientRect().bottom-e.getBoundingClientRect().top)),m&&(h=m.getBoundingClientRect().left-e.getBoundingClientRect().left-m.getBoundingClientRect().width,u&&(h=m.getBoundingClientRect().top-e.getBoundingClientRect().top-m.getBoundingClientRect().height));let f,g=Math.round(c/o)*o;g<s&&(g=s),g>h&&(g=h),u?t.style.top=g+"px":t.style.left=g+"px",f=u?Math.round(g*r/(e.offsetHeight-t.offsetHeight)+d):Math.round(g*r/(e.offsetWidth-t.offsetWidth)+d),n.innerHTML=f+"",l.value=f+""}i=u?c.clientY-t.getBoundingClientRect().top:c.clientX-t.getBoundingClientRect().left,document.addEventListener("mousemove",m),document.addEventListener("mouseup",(function e(){document.removeEventListener("mouseup",e),document.removeEventListener("mousemove",m)})),o=Math.round((e.offsetWidth-t.offsetWidth)/h),u&&(o=(e.getBoundingClientRect().height-t.getBoundingClientRect().height)/h)})),t.addEventListener("ondragstart",(function(){return!1}))}deleteAllToggles(e){let t="#slider__scale-"+e;for(let i=document.querySelector(t).children.length;i>1;i--)this.deleteToggle(e,i,!0)}deleteToggle(e,t,i=!1){let l="#slider__handleControlContainer-"+e,n="#slider__scale-"+e;document.querySelector(n).children[t-1].remove(),document.querySelector(l).children[t-1].remove(),t<document.querySelector(n).children.length+1&&!i&&(this.changePostfixes(n,"slider__toggle",t),this.changePostfixes(l,"slider__toggleControl",t))}chandeTogglePosition(e,t,i){let l=t.offsetWidth,n=i.offsetWidth;i.classList.contains("vertical")&&(l=t.offsetHeight,n=i.offsetHeight);let s=(+e-this.sliderInfo.min)*(l-n)/(this.sliderInfo.max-this.sliderInfo.min);s>l-n/2&&(s=l-n/2,e=this.sliderInfo.max),s<0&&(s=0,e=this.sliderInfo.min),i.classList.contains("vertical")?i.style.top=s+"px":i.style.left=s+"px",i.firstElementChild.textContent=""+e}changePostfixes(e,t,i){let l=i-1,n=document.querySelector(e);for(let e=l;e<n.children.length;e++){let i=n.children[e],[,l,s]=i.id.split("-"),r=+s-1,d="#"+t+"-"+l+"-"+r;if(i.id=d,i.children.length>0)for(let e=0;e<i.children.length;e++){let[t,,]=i.children[e].id.split("-");if(d=t+"-"+l+"-"+r,i.children[e].id=d,"LABLE"===i.children[e].tagName){let t=i.children[e],n=t.getAttribute("for"),[s,,]=n.split("-");n=s+"-"+l+"-"+r,t.setAttribute("for",n),t.innerHTML=r+": "}}}}rotateScaleVertical(t){let i=t;if(t.includes("#")||(i="#"+t),!e(i).hasClass("vertical")){e(i).addClass("vertical"),e(i).children(".slider__scale").addClass("vertical");let t=e(i).children(".slider__scale").children(".slider__toggle");for(let e of t){e.classList.add("vertical");let t=e.style.left;e.style.left="-4px",e.style.top=t,e.firstElementChild.classList.add("vertical")}}}rotateScaleHorisontal(t){let i=t;if(t.includes("#")||(i="#"+t),e(i).hasClass("vertical")){e(i).removeClass("vertical"),e(i).children(".slider__scale").removeClass("vertical");let t=e(i).children(".slider__scale").children(".slider__toggle");for(let e of t){e.classList.remove("vertical");let t=e.style.top;e.style.top="-5px",e.style.left=t,e.firstElementChild.classList.remove("vertical")}}}showToggleLables(e,t){let i=document.querySelector("#slider__scale-"+e),l=Array.prototype.slice.call(i.children);for(let e of l)t?e.firstElementChild.classList.contains("hidden")&&e.firstElementChild.classList.remove("hidden"):e.firstElementChild.classList.contains("hidden")||e.firstElementChild.classList.add("hidden")}}const r=new class{constructor(){this.sliders=[{idNum:1,minScaleValue:0,maxScaleValue:100,step:10,handleNumber:1},{idNum:2,minScaleValue:-50,maxScaleValue:352,step:1,handleNumber:2},{idNum:3,minScaleValue:15,maxScaleValue:120,step:5,handleNumber:1}]}addSlider(e=0,t=100,i=1){let l={idNum:this.sliders.length>0?this.sliders[this.sliders.length-1].idNum+1:1,minScaleValue:e,maxScaleValue:t,step:i,handleNumber:1};this.sliders.push(l)}findSliderById(e){return this.sliders.find(t=>t.idNum==e)}getMinScaleValue(e){return this.findSliderById(e).minScaleValue}getMaxScaleValue(e){return+this.findSliderById(e).maxScaleValue}getStep(e){return+this.findSliderById(e).step}getHandleNumberValue(e){return+this.findSliderById(e).handleNumber}setMinScaleValue(e,t){this.findSliderById(e).minScaleValue=t}setMaxScaleValue(e,t){this.findSliderById(e).maxScaleValue=t}setStep(e,t){this.findSliderById(e).step=t}setHandleNumberValue(e,t){this.findSliderById(e).handleNumber=t}deleteSlider(){}};console.log(r);const d=new class extends class{constructor(){this.sendMessage=function(e){for(var t=0,i=this.observers.length;t<i;t++)this.observers[t].notify(e)},this.addObserver=function(e){this.observers.push(e)},this.observers=[]}}{constructor(e){super(),this.model=e,this.renderedSliders=[],console.log(this.renderedSliders)}displaySliders(e){for(let t of e){let e=new s(t);e.render(t.idNum);let i={idNum:+t.idNum,mainContainerFullId:"#"+e.mainContainer.id};this.renderedSliders.push(i)}this.createListeners()}clear(){for(let e of document.querySelectorAll(".slider__mainContainer"))e.remove()}createListeners(){for(let e of this.renderedSliders){let t=document.querySelector(e.mainContainerFullId),i=document.querySelector("#slider__minInput-"+e.idNum),l=document.querySelector("#slider__maxInput-"+e.idNum),n=document.querySelector("#slider__stepInput-"+e.idNum),s=this;i.addEventListener("change",(function(){let e=t.lastElementChild.firstElementChild.childElementCount,[,i]=this.id.split("-"),l={elemId:this.id,idNum:i,newValue:+this.value,handleNum:e};s.sendMessage(l)})),l.addEventListener("change",(function(){let e=t.lastElementChild.firstElementChild.childElementCount,[,i]=this.id.split("-"),l={elemId:this.id,idNum:i,newValue:+this.value,handleNum:e};s.sendMessage(l)})),n.addEventListener("change",(function(){let e=t.lastElementChild.firstElementChild.childElementCount,[,i]=this.id.split("-"),l={elemId:this.id,idNum:i,newValue:+this.value,handleNum:e};+this.value&&s.sendMessage(l)}))}}}(r);console.log(d);new class{constructor(e,t){this.changeMinValue=(e,t)=>{this.model.setMinScaleValue(e,t)},this.changeMaxValue=(e,t)=>{this.model.setMaxScaleValue(e,t)},this.changeStepValue=(e,t)=>{this.model.setStep(e,t)},this.changeHandleNumberValue=(e,t)=>{this.model.setHandleNumberValue(e,t)},this.model=e,this.view=t,this.view.displaySliders(this.model.sliders);let i=this;this.observer=new n((function(e){e.elemId.includes("minInput")?i.changeMinValue(e.idNum,e.newValue):e.elemId.includes("maxInput")?i.changeMaxValue(e.idNum,e.newValue):e.elemId.includes("stepInput")&&i.changeStepValue(e.idNum,e.newValue),+i.model.getHandleNumberValue(e.idNum)!=e.handleNum&&i.changeHandleNumberValue(e.idNum,e.handleNum),i.view.clear(),i.view.displaySliders(i.model.sliders)})),this.view.addObserver(this.observer)}}(r,d)}.call(this,i(1))},,function(e,t,i){var l=i(3),n=i(4);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var s={insert:"head",singleton:!1},r=(l(n,s),n.locals?n.locals:{});e.exports=r},,function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,